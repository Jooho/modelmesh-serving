# Copyright 2021 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Build arguments
ARG SOURCE_CODE=.
ARG CI_CONTAINER_VERSION="unknown"

#@follow_tag(registry.redhat.io/ubi8/go-toolset:1.18)
FROM registry.redhat.io/ubi8/go-toolset:1.18 as builder

## Build args to be used at this step
ARG SOURCE_CODE
## CPaaS CODE BEGIN ##
## COPY ${REMOTE_SOURCE} ${REMOTE_SOURCE_DIR}
## ENV SOURCE_CODE=${REMOTE_SOURCE}/app
## CPaaS CODE END ##

WORKDIR /workspace

COPY main.go main.go
COPY apis/ apis/
COPY controllers/ controllers/
COPY generated/ generated/
COPY pkg/ pkg/
COPY version /etc/modelmesh-version

USER root

# Build
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o manager main.go

#@follow_tag(registry.redhat.io/ubi8/ubi-minimal:8.7)
FROM registry.redhat.io/ubi8/ubi-minimal:8.7 AS runtime

## Build args to be used at this step
ARG CI_CONTAINER_VERSION
ARG USER=2000

LABEL com.redhat.component="odh-modelmesh-serving-controller-container" \
      name="managed-open-data-hub/odh-modelmesh-serving-controller-rhel8" \
      version="" \
      summary="odh-modelmesh-serving-controller" \
      io.openshift.expose-services="" \
      io.k8s.display-name="modelmesh-serving-controller" \
      maintainer="['managed-open-data-hub@redhat.com']" \
      description="Manages lifecycle of ModelMesh Serving Custom Resources and associated Kubernetes resources" \
      com.redhat.license_terms="https://www.redhat.com/licenses/Red_Hat_Standard_EULA_20191108.pdf"

## Install additional packages
RUN microdnf install -y shadow-utils &&\
    microdnf clean all

## Create a non-root user with UID 2000 and switch to it
USER 2000

WORKDIR /
COPY --from=builder /workspace/manager .
COPY --from=builder /workspace/config/internal ./config/internal

ENTRYPOINT ["/manager"]
